import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class VulnerabilityLoader {
    public static Map<String, String> loadVulnerabilities(String filePath) {
        Map<String, String> vulnerabilities = new HashMap<>();
        File file = new File(filePath);

        if (!file.exists()) {
            System.out.println("Vulnerability database file not found: " + filePath);
            return vulnerabilities;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            reader.readLine();

            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length < 5) {
                    System.out.println("Invalid line in database: " + line);
                    continue;
                }

                String service = parts[0].trim().toLowerCase();
                String version = parts[1].trim().toLowerCase();
                String cve = parts[2].trim();
                String description = parts[3].trim();
                String severity = parts[4].trim();

                String key = (service + version).replaceAll("\\s+", "");
                vulnerabilities.put(key, cve + ": " + description + " (Severity: " + severity + ")");
            }

            System.out.println("Vulnerabilities loaded: " + vulnerabilities.size());
        } catch (IOException e) {
            System.err.println("Error reading vulnerability database: " + e.getMessage());
        }

        return vulnerabilities;
    }
}
